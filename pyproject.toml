[tool.poetry]
name = "aba_cli_scrapper"
version = "1.1.2"
description = "Scrappe all products and theirs related suppliers existing on Alibaba based on keywords provided by user and save results into a database (Mysql/Sqlite)."
authors = ["poneoneo <onealzero@gmail.com>"]
readme = "README.md"
license = "GNU GENERAL PUBLIC LICENSEVersion 3, 29 June 2007"
homepage = "https://github.com/poneoneo/Alibaba-CLI-Scrapper"
repository = "https://github.com/poneoneo/Alibaba-CLI-Scrapper"
keywords = ["cli", "scrapping", "alibaba", "scrapper", "alibaba-cli-scrapper"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Terminals",
    "Typing :: Typed",
]
include = [
    "COPYING",
]

[tool.poetry.dev-dependencies]
pytest = "^3.0"

[tool.poetry.scripts]
run-scrapper = "ali2b_cli_scrapper.app:run_scrapper"
db-update = "ali2ba_cli_scrapper.app:db_update"
db-init = "ali2ba_cli_scrapper.app:db_init"

[tool.poetry.dependencies]
python = ">=3.8"
sqlalchemy = {version = "2.0.31", markers = "python_version >= \"3.7\""}
loguru = {version = "0.7.2", markers = "python_version >= \"3.5\""}
playwright = {version = "1.44.0", markers = "python_version >= \"3.8\""}
selectolax = "0.3.21"
pyright = {version = "1.1.369", markers = "python_version >= \"3.7\""}
python-decouple = "3.8"
sqlmodel = {version = "0.0.19", markers = "python_version >= \"3.7\""}
typer = {version = "0.12.3", markers = "python_version >= \"3.7\""}
mysqlclient = {version = "2.2.4", markers = "python_version >= \"3.8\""}
cryptography = {version = "42.0.8", markers = "python_version >= \"3.7\""}
black = {version = "24.4.2", markers = "python_version >= \"3.8\""}
python-dotenv = {version = "1.0.1", markers = "python_version >= \"3.8\""}
requests = {version = "2.32.3", markers = "python_version >= \"3.8\""}
aiohttp = {version = "3.9.5", markers = "python_version >= \"3.8\""}
aiosignal = {version = "1.3.1", markers = "python_version >= \"3.7\""}
annotated-types = {version = "0.7.0", markers = "python_version >= \"3.8\""}
attrs = {version = "23.2.0", markers = "python_version >= \"3.7\""}
certifi = {version = "2024.6.2", markers = "python_version >= \"3.6\""}
cffi = {version = "1.16.0", markers = "platform_python_implementation != \"PyPy\""}
charset-normalizer = {version = "3.3.2", markers = "python_full_version >= \"3.7.0\""}
click = {version = "8.1.7", markers = "python_version >= \"3.7\""}
colorama = {version = "0.4.6", markers = "sys_platform == \"win32\""}
frozenlist = {version = "1.4.1", markers = "python_version >= \"3.8\""}
greenlet = {version = "3.0.3", markers = "python_version < \"3.13\" and platform_machine == \"aarch64\" or (platform_machine == \"ppc64le\" or (platform_machine == \"x86_64\" or (platform_machine == \"amd64\" or (platform_machine == \"AMD64\" or (platform_machine == \"win32\" or platform_machine == \"WIN32\")))))"}
idna = {version = "3.7", markers = "python_version >= \"3.5\""}
markdown-it-py = {version = "3.0.0", markers = "python_version >= \"3.8\""}
mdurl = {version = "0.1.2", markers = "python_version >= \"3.7\""}
multidict = {version = "6.0.5", markers = "python_version >= \"3.7\""}
mypy-extensions = {version = "1.0.0", markers = "python_version >= \"3.5\""}
nodeenv = {version = "1.9.1", markers = "python_version >= \"2.7\" and python_version not in \"3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6\""}
packaging = {version = "24.1", markers = "python_version >= \"3.8\""}
pathspec = {version = "0.12.1", markers = "python_version >= \"3.8\""}
platformdirs = {version = "4.2.2", markers = "python_version >= \"3.8\""}
pycparser = {version = "2.22", markers = "python_version >= \"3.8\""}
pydantic = {version = "2.8.0", markers = "python_version >= \"3.8\""}
pydantic-core = {version = "2.20.0", markers = "python_version >= \"3.8\""}
pyee = {version = "11.1.0", markers = "python_version >= \"3.8\""}
pygments = {version = "2.18.0", markers = "python_version >= \"3.8\""}
rich = {version = "13.7.1", markers = "python_full_version >= \"3.7.0\""}
shellingham = {version = "1.5.4", markers = "python_version >= \"3.7\""}
typing-extensions = {version = "4.12.2", markers = "python_version >= \"3.8\""}
urllib3 = {version = "2.2.2", markers = "python_version >= \"3.8\""}
win32-setctime = {version = "1.1.0", markers = "sys_platform == \"win32\""}
yarl = {version = "1.9.4", markers = "python_version >= \"3.7\""}




[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
